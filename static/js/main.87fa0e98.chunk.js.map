{"version":3,"sources":["api/todos.js","api/users.js","components/Form/Form.jsx","types.js","components/ListItem/ListItem.jsx","components/List/List.jsx","App.js","index.js"],"names":["todosFromServer","userId","id","title","completed","usersFromServer","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","Form","PropTypes","shape","number","isRequired","string","bool","selectedUser","enteredTodo","todos","addTodo","onChange","users","setDefaultState","action","onSubmit","event","preventDefault","length","required","placeholder","maxLength","value","map","user","key","type","ListItem","todo","className","find","List","App","state","target","setState","createdTodo","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87fa0e98.chunk.js","sourcesContent":["/* eslint-disable max-len */\n\nexport const todosFromServer = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n","const usersFromServer = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default usersFromServer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { todosType, usersType } from '../../types';\n\nexport const Form = ({ selectedUser, enteredTodo,\n  todos, addTodo, onChange, users, setDefaultState }) => (\n    <form\n      action=\"post\"\n      onSubmit={(event) => {\n        event.preventDefault();\n\n        addTodo({\n          userId: +selectedUser,\n          id: todos.length + 1,\n          title: enteredTodo,\n          completed: false,\n        });\n\n        setDefaultState();\n      }}\n    >\n      <input\n        name=\"enteredTodo\"\n        required\n        placeholder=\"Title\"\n        maxLength=\"20\"\n        value={enteredTodo}\n        onChange={onChange}\n      />\n      <select\n        required\n        name=\"selectedUser\"\n        value={selectedUser}\n        onChange={onChange}\n      >\n        <option value=\"\">\n          Choose a user\n        </option>\n        {users.map(user => (\n          <option\n            key={user.id}\n            value={user.id}\n          >\n            {user.name}\n          </option>\n        ))\n        }\n      </select>\n\n      <button\n        type=\"submit\"\n      >\n        Submit\n      </button>\n    </form>\n);\n\nForm.propTypes = {\n  selectedUser: PropTypes.string.isRequired,\n  enteredTodo: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(todosType).isRequired,\n  users: PropTypes.arrayOf(usersType).isRequired,\n  addTodo: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  setDefaultState: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const todosType = PropTypes.shape({\n  userId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n});\n\nexport const usersType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  address: PropTypes.shape({\n    street: PropTypes.string.isRequired,\n    suite: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    zipcode: PropTypes.string.isRequired,\n    geo: PropTypes.shape({\n      lat: PropTypes.string.isRequired,\n      lng: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  phone: PropTypes.string.isRequired,\n  website: PropTypes.string.isRequired,\n  company: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    catchPhrase: PropTypes.string.isRequired,\n    bs: PropTypes.string.isRequired,\n  }).isRequired,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usersType, todosType } from '../../types';\n\nexport const ListItem = ({ users, todo }) => (\n  <>\n    <p className=\"todo__user\">\n      {users.find(user => user.id === todo.userId).name}\n    </p>\n    <p>{todo.title}</p>\n    <p>\n      Progress:\n      {todo.completed ? ' Completed' : ' In progress'}\n    </p>\n  </>\n);\n\nListItem.propTypes = {\n  todo: PropTypes.arrayOf(todosType).isRequired,\n  users: PropTypes.arrayOf(usersType).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '../ListItem/ListItem';\nimport { usersType, todosType } from '../../types';\nimport './list.scss';\n\nexport const List = ({ todos, users }) => (\n  <ul className=\"todo\">\n    {todos.map(todo => (\n      <li\n        className=\"todo__item\"\n        key={todo.id}\n      >\n        <ListItem\n          users={users}\n          todo={todo}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nList.propTypes = {\n  todos: PropTypes.arrayOf(todosType).isRequired,\n  users: PropTypes.arrayOf(usersType).isRequired,\n};\n","import React from 'react';\nimport { todosFromServer } from './api/todos';\nimport usersFromServer from './api/users';\nimport { Form } from './components/Form/Form';\nimport { List } from './components/List/List';\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    selectedUser: '',\n    enteredTodo: '',\n    todos: todosFromServer,\n    users: usersFromServer,\n  }\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  addTodo = (createdTodo) => {\n    this.setState(state => ({\n      todos: [...state.todos, createdTodo],\n    }));\n  }\n\n  setDefaultState = () => {\n    this.setState({\n      selectedUser: '',\n      enteredTodo: '',\n    });\n  }\n\n  render() {\n    const { enteredTodo, selectedUser, todos, users } = this.state;\n    const { onChange, addTodo, setDefaultState } = this;\n\n    return (\n      <div className=\"app\">\n        <h1>Add todo</h1>\n\n        <Form\n          todos={todos}\n          users={users}\n          selectedUser={selectedUser}\n          enteredTodo={enteredTodo}\n          addTodo={addTodo}\n          onChange={onChange}\n          setDefaultState={setDefaultState}\n        />\n\n        <List\n          todos={todos}\n          users={users}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}